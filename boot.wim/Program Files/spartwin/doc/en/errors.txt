                   +--------------------------------------+
                   |           Partition Saving           |
                   |                                      |
                   |   http://www.partition-saving.com    |
                   | Copyright (c) 1999-2012 D. Guibouret |
                   +--------------------------------------+

                                 Errors list

This file gives the list of errors that can be generated by Partition Saving.
Errors can be divided into two types:

  - non fatal errors.
  - fatal errors.

Firsts are errors generated by program but that did not stop its execution.
Seconds are errors that are due to an encountered problem that prevent program
to follow its execution (else it can result in some loss of data).


1- Non fatal errors
-------------------

  - This file does not exist: <message>

When restoring, you give the name on a non-existing file. Following message
gives more details on the problem.

  - This file already exist and cannot be overwritten.

When saving, you try to save into a read-only or not available file. If it is
not the case and you create file on an USB drive, it can be because it does
not support writing file check, so you have to disable it with using -nvf
option. If you try to create file on a mounted NTFS partition, you cannot do
that, you have first to create files from Windows before using them from DOS.

  - This file already exist and is on a drive for which you are not allowed
    overwriting a not empty file.

When saving a partition on itself you try to overwrite a not empty existing
file to create the backup file. This operation can lead to some errors after
restoring, so it is not allowed. So you have to either create a new file or
choose an empty file if creating file is not available. This message can only
appear on FAT and ext2/ext3 partitions (on NTFS, overwriting a not empty
existing file is available without any problem).

  - Given file is incorrect: <message>

When restoring, you select a file that seems to be erroneous. Perhaps it is
not a file created with savepart.
Messages can be following:

    * Accessing file error

File cannot be opened.

    * Header not found

Header cannot be found. It is not a file created with savepart or it is
erroneous.

    * Bad header version

Header version is not known. This file can have been created with a more
recent version of savepart.

    * Bad file size

Size of file does not correspond to size saved into header.

    * Bad header CRC

A CRC is used to check header. Calculated CRC is not equal to saved one.

    * Bad compression format

Compression algorithm is not known.

    * Bad file number

Given file is not the one waited when restoring must be done with several
files. Perhaps you have inverted two files.

    * Bad disk format

When restoring from several files, disk format of given file does not
correspond to disk format of previous file.

    * Bad partition format

When restoring from several files, partition format of given file does not
correspond to partition format of previous file.

    * Bad filesystem type

Filesystem type into file header is not recognized, or when restoring from
several files, filesystem type of new file is not the same than for the
previous file.

    * Unknown filesystem option

An specific filesystem option (as saving an partition on itself) is not
recognised by this version of program. Perhaps do you use a different version
than the one used to perform saving.

    * Bad filesystem option

A specific filesystem option of new file is not the same than for the previous
file.

    * Bad support type

Support type into file header is not recognized, or when restoring from
several files, support type of new file is not the same than for the previous
file.

  - There was not enough free space on chosen disk

There was not enough free space on chosen disk or free disk space cannot be
know. Choose another drive where to create file.

  - All groups/FATs were not written correctly

This error appears if you restore occupied sectors of a partition.
An error has occurred when restoring. This error is not fatal, because it does
not stop program, but you will have to use a program like scandisk to check
partition content. Try possibly to do restoring on another partition.

  - All data seem not to have been written on element (<n> bytes remaining)

This error appears if you restore occupied sectors of a partition.
An error has occurred when restoring. This error is not fatal, because it does
not stop program, but you will have to use a program like scandisk to check
partition content. Try possibly to do restoring/copying on another partition
or check that file is valid.

  - All sectors were not written or more sectors were written than expected.

When restoring/copying, it seems that all sectors were not written or too much
sectors were written.
This error is not fatal as it does not stop program execution, but you have to
run some utilities like scandisk to perform a check of the partition. Try
possibly to do restoring/copying on another partition or check that file is
valid.

  - Number of sectors restored/copied/saved differs from number of sectors
    declared for element (<n1> against <n2>)

This error is not fatal, because it does not stop program, but you will have
to use a program like scandisk to check partition content. Try possibly to do
restoring on another partition or check that file is valid.

  - Boot sector copy has not been found.

When saving NTFS partition, boot sector copy cannot be found, so it would not
be restored. As long as your hard disk has no bad sector this has no
consequence.

  - Boot sector copy cannot be written.

When restoring NTFS partition, boot sector copy cannot be written. Some
versions of NTFS put this copy of boot sector on the middle of the partition
and so, if when restoring partition, this sector is already occupied, copy of
boot sector cannot be written. Restoring this partition on a partition with a
different size (notably on a partition with the same size as saved one) can
solve this problem. This has no consequence as long as your hard disk does not
has bad sectors. Running chkdsk after restoration allows correcting this
problem.

  - Filesystem information sector containing invalid data is not modified.
    Copy of filesystem information sector containing invalid data is not
    modified.

Given sector contains some wrong data. It theorically needs to be updated, but
in this case it is not done as this perhaps is not expected sector. Using
scandisk will certainly correct this. This can appear only when restoring
FAT32 partition on a partition with a different format.

  - File listing bad clusters cannot be updated: <message>.

This message can be displayed when restoring a NTFS partition on a partition
with a different definition than the source one. Following error message gives
you more details, but in most case it is not very bad error and you can run
chkdsk on this partition with option to force filesystem check to correct it.

  - Update of filesystem of <drive> has generated an error: <message>.

Update of filesystem information on a partition you mount has generated an
error and filesystem is certainly into some inconsistency state. It is better
to run some check program as scandisk on it to correct this. If you created
some file on this drive, it is better to check them because they can be wrong.

  - This partition is already mounted as <drive>:.
    Partition to mount as <drive>: is already mounted as <drive>:.
    Filesystem to mount <drive>: is not recognised.
    Partition to mount <drive>: does not exist.
    Disk to mount <drive>: does not exist.
    Device to mount <drive>: does not exist.
    Chosen support cannot be mounted: <message>.
    Drive to mount on <drive> cannot be mounted: <message>.

These error messages are displayed when trying to mount a partition. They say
why a partition cannot be mounted.

  - An error occured when resetting bad sectors: <message>

Resetting information on bad sectors into filesystem cannot be done correctly.
Message gives more details on the problem. Running "scandisk" on the
corresponding drive can correct this problem.

  - More than 1000 files cannot be used with automatic naming

Automatic naming does not allow generating names for more than 1000 files. So
you will be obliged to give name for following files.

  - Program cannot get device format.
    Program cannot lock device access to avoid other program accessing it.
    Program cannot read device.

These error messages can appear when detecting device format. This can be
linked to fact that there was no floppy in drive or another program has a file
opened on device.

  - Program cannot access main partition of extended type.

This error message can only appear into Windows version to signal that it
cannot save a main partition of extended type. You have to save each partition
inside this one independently.

  - Directory <directory name> is not fully analysed: <message>

Program cannot fully read a directory content. So displayed list can have some
missing entries. Message gives more details on error.

  - Some boot configuration data cannot be read

Program cannot read some entries from boot configuration file of Windows
Vista. So some entries can be missing.

  - Trying to read <n1> sectors from sector <n2> when support has <n3> sectors
    only.
    Trying to write <n1> sectors from sector <n2> when support has <n3>
    sectors only.

This error comes from an error of program or of filesystem. For not damaging
data outside of the partition, sectors are not accessed. If you save only
occupied sectors of the partition (saving or source partition when saving),
try to check it (using scandisk by example). If some errors are found, correct
them and try to save again. In another cases please contact me.

  - Support is currently in use through Linux access, unmount it before.

Support is currently mounted, so program cannot lock it to avoid other
programs to access it. You have first to unmount it if you want direct access
to it by using unmount command (or right click on device icon and choose to
unmount it if you have such icon on your desktop). If the device you want to
access is the current Linux root directory, you cannot unmount it, so you need
to boot from another Linux installation or from a live CD (installation CD
have often such an option or you can use dedicated distribution) or use the
DOS or Windows version of Partition-Saving.

  - An error occurred when updating resize inode, filesystem will be checked
    at next mount

Update of resize inode (specific inode on ext2 filesystem allowing modifying
filesystem size) cannot be done because it seems to be wrong. The error flag
of filesystem has been set to force execution of e2fsck at next mount for it
to try to correct this problem.


2- Fatal errors
---------------

  - Error when initialising deflating/inflating algorithm

There was something wrong when initialising deflating/inflating algorithm. You
can try again without deflating data (in case of save).

  - Error when deflating/inflating data

There was something wrong when running deflating/inflating algorithm. If it is
when deflating (when saving), you can try again without deflating data. If it
is when inflating (when restoring), perhaps is the file erroneous.

  - Error opening/creating file <name>: <message>.
    Error on seeking into file <name>: <message>.
    Error on reading file <name>: <message>.
    Error on writing file <name>: <message>.
    Error on closing file <name>: <message>.

An error appears when creating, opening, seeking, reading or writing a file. A
message can explain the reason. There can be several reasons (as disk full,
bad sector, read-only file, ...).

  - Calculated CRC is not equal to saved CRC

When restoring, saved CRC into file is not equal to calculated CRC. Perhaps is
the file erroneous.

  - Bad flag marking last file

Into header is an element to mark last file. Current state of restoration does
not correspond to read header. Perhaps is the file erroneous.

  - Size of read data is not equal to saved size

Into header an element save data size into file. Current restoration state
does not correspond to read header. Perhaps is the file erroneous.

  - Not enough free DOS memory

DPMI server cannot allocate memory. You need to free some DOS memory (below
the first 640 Kb (conventionnal memory when you use MEM.EXE)) with removing
drivers and program that you do not need into yours CONFIG.SYS and
AUTOEXEC.BAT (add a "REM " at beginning of line in place of removing it such
as you can easily undo modifications). Another solution is to add
"DEVICE=<directory>EMM386.EXE RAM" line at beginning of your CONFIG.SYS
(<directory> is path to EMM386.EXE file). Program needs at least 420 Kb of
free DOS memory.

  - Error when calling interruption with DPMI interface
    Error when calling procedure with DPMI interface

DPMI server cannot call an interruption or a procedure. Try to load into
memory a DPMI server that will replace the one used (CWSDPMI integrated into
program).

  - Not enough memory

Memory cannot be allocated. If you are saving with deflating data, try to not
use compression to save memory space. If you have more than 32 Mb of memory
and EMM386 is activated, you can win space by disabling it (look at remark
part into chapter about saving only occupied sectors for NTFS partition into
manual (chapter 25.i)).

  - No element agrees with source

No element has been found which can correspond to format of saved element. For
two elements to correspond, they have to respect some constraints described
into manual at chapter 25.

  - No element agrees with given choices

It was not possible to find an element that correspond to given choices or
options. Check your options file or try without options file to see what are
choices that are proposed to you.

  - There was not enough option to choose an element

Options that you gave are not enough to choose an element. You have either to
be more precise into options given or to not give some to see choice that is
proposed to you.

  - This program cannot be executed under Windows

This program cannot be executed on multitasking environment. You must boot
your computer with DOS (not a DOS window under Windows). For this purpose,
please read FAQ (Q 10).

  - Value "<s1>" is not allowed for option <s2> (<s3>)
    Value "<s1>" is not allowed for option <s2> (<d1>..<d2>)

Value you give for option <s2> is not correct. It must be one of the value
given into <s3> or a number into <d1>..<d2> range.

  - Language option is not given (-l en|fr|fr_2)

You give language option (-l) without following it by chosen language.

  - Options file name is not given (-f <options file name>)

You give options file name option (-f) without a file name after.

  - File name given into options file is not valid (line <n>)

Parameter given into options file for file name is not valid. Perhaps was the
file name not given or it contains a space character.

  - Disk number must be given if you want to give partition number

Options file must contain a "disk=" option if you want to give "main_part="
option.

  - Main partition number must be given if you want to give extended partition
    number

Options file must contain a "main_part=" option if you want to give
"ext_part=" option.

  - Option "<s>" is unknown

Given option is not recognised.

  - Option "<s>" is unknown (at line <n> of options file)

Given option <s> into options file at line <n> is not recognised.

  - Option "<s>" must be defined only once

Given option is given more than once, when it can be given only once.

  - Support options (disk, floppy and device) cannot be used together

Options file can define only one support.

  - Format of mount= option ("<s>") is wrong, it shall be either <drive
    number>:<disk number>/<main part. number>,<extended part. number> with
    ",<extended part. number>" that must not be given for a main partition, or
    <drive number>:<drive letter> to mount a DOS device.

Option "mount=" that you gave into options file does not follow expected
syntax. Expected format is the one described into error message.

  - Format of heads_sectors= option ("<s>") is wrong, it shall be: "default",
    "standard", "extended", "parttable" or <number of heads>/<number of
    sectors>.

Option "heads_sectors=" that you gave into options file does not follow
expected syntax. This one is the one described into error message.

  - A sector containing parameters for filesystem cannot be read
    A sector containing parameters for filesystem cannot be written

This error appears only when saving/restoring occupied sectors of a partition.
One of the sectors defining filesystem cannot be read/written. As these
sectors are needed for a good access to filesystem, saving/restoring is
stopped to avoid errors. If this problem occurs when saving, you can choose to
save all sectors. If this problem occurs when restoring, you can choose to
restore it on another partition. In all cases, use a program like scandisk to
possibly correct this problem.

  - FAT sectors reading returns an error: <message>

This error appears only when saving/restoring occupied sectors of a FAT
partition.
Problem detail is given into following message. If problem is that FATs
differ, you can use scandisk to correct it, then try again the saving (with
saving occupied only sectors again). In case it is another message, problem is
more important and if running scandisk does not solve it you will have to save
the whole partition.

  - FAT sectors writing returns an error: <message>

Writing modified FAT sectors back to disk generates an error. More details are
given into following message. It is better to run scandisk to try to solve the
problem.

  - There were not enough sectors on partition to write all data

This error appears only when restoring occupied sectors of a partition.
Despite the check of the minimum size to restore a partition, this partition
is too small. This partition has not been modified if you restore a FAT
partition, and only the first 1024 bytes of the partition have been modified
if you restore an ext2 partition (they do not contain any data (having some
boot code ?), so partition can be considered as not modified). Try to restore
it on a bigger partition.

  - An error occurred when updating bitmap: <message>.
    An error occurred when updating filesystem: <message>.

In the case of NTFS partitions, filesystem cannot be correctly built.
Depending on the following error message, try to do restore/copy on a
partition with a different size (smaller or bigger). Running chkdsk on this
partition with option to force filesystem check can also solve problem. Doing
restoring/copying on a partition with the same definition as the source one
cannot generate this problem.

  - An error occurred when reading bitmap: <message>.

In NTFS partition, bitmap describes which sectors are occupied or not.
Depending on following error message, running chkdsk with option to force
filesystem check can solve the problem, else you will have to save the whole
partition.

  - Driver cannot be set as driver has not been found.

Options "-m" and "-u" can be used only if driver has been loaded.

  - You cannot create files on NTFS drive as you are not running Windows
    NT/2000/XP.

Option "-n" to create file on a NTFS drive can only be used from an operating
system that is able to manage this type of filesystem.

  - Error when copying data into XMS memory.
    Error when copying data into EMS memory.

An error occurred when using XMS or EMS memory. Try to use another XMS/EMS
driver.

  - You do not have enough EMS or XMS memory: <n> Kb free memory are needed.

For using driver, you need more EMS or XMS memory. Please read chapter 16 of
manual to get more details on this error.

  - Number of sectors to simulate an element differs from number of sectors
    written into element (<n1> against <n2>).

Between what was declared into element and what was found, number of sectors
is not the same. In this case driver is not initialised. Possibly, you can
check if the file is correct.

  - More than 255 files cannot be used when initialising driver.

Driver is not able to simulate elements that are splitted in more than 255
files. Use copying option to try to group several files together.

  - Filename cannot be more than <n> characters long when using driver.

Driver is not able to use file whose name (path + name) is more than <n>
character long. Move these files into another directory to reduce name length.

  - Environment variable "<name>" is unknown.

Options file uses an environment variable that has not been found. You have to
either define this environment variable or modify options file.

  - Program cannot treat this type of element for this operation.

When updating registry or BOOTSECT.DOS file, these operations can be performed
only on some element type (Windows installation can only be searched on a
partition or DOS device, entry to modify into registry can only correspond to
a partition, BOOTSECT.DOS file can only be on a partition, a floppy disk or a
DOS device).

  - Error reading disk number into MBR.

This can be generated in case of faulty or wrong MBR.

  - Registry modification was not done correctly: <message>.

This can be due to a bad support of NTFS filesystem, or a bad sector when
reading or writing on disk.

  - BOOTSECT.DOS file not found on this element or has a wrong size.
    BOOTSECT.DOS file has an incorrect signature.

Support you choose seems not to have a BOOTSECT.DOS file on root directory, or
it has a wrong size or content.

  - An error was raised when creating driver: <message>.

When restoring a partition for which only occupied sectors were saved, program
is not able to access to content of this partition with using its filesystem.
This can be because of a bad saving file, so you have to check it.

  - Driver for the element to treat is used elsewhere, modifying this element
    will lead to data lost.
    Element you want to restore has some opened file.

When restoring, you mount a partition to be able to access to a saving file,
then you use this partition as the restoration destination. This cannot work,
so you have first to copy file elsewhere then perform restoration.

  - Element you want to save has some opened file.

You try to save a partition when you use some files on it. Either filesystem
on this partition allows being saved on itself, in which case you have to use
this option, or it does not allow this and so you cannot do that.

  - A buffer overflow occurs when printing to screen.

This message is a check message that shall not appear. In case you get it,
please report this to me with giving me details on how you obtain it.

  - Error: cannot allocate page table memory.

This error message is generated by DPMI server that does no more have enough
DOS memory. You can either increase free DOS memory with removing uneeded
drivers, or use the max_mem_size option of configuration file to reduce memory
used by program. In this case, you can have to perform several tries to get
the correct size (begin with giving half of your memory size, then reduce this
number until it works).

  - Files cannot be explored because of errors found when checking them

Some errors have been found when checking backup files you want to explore. So
you cannot explore them.

  - Program is not able to read explored drive at offset <n> when checking it

When indexing backup files to explore them, program is not able to seek into a
file. So you cannot explore them.

  - The "\Objects" key was not found into file

When reading boot configuration file, program did not find the key used has
root where to store these informations. File can be wrong.

  - No boot configuration data has been found

When reading boot configuration file, program did not find any boot entry.
File can be wrong or empty.

  - Boot entry name given into options file is not found

When reading boot configuration file, program did not find entry name you gave
into options file. You can try without this options file to see if this entry
is listed.

  - Boot configuration modification was not done correctly: <message>

When writting changes into boot configuration file, program get an error.
Message gives more details on it.

  - Cannot initialise output console.
    Console does not support this screen size.
    Cannot initialise input console.

These messages can only be displayed on Windows. They show a problem into
input/output management. Check you run program from a standard command window
(or by direct launch of program) that allows displaying 80*25 characters. If
command window is too small, you can increase it either with increasing screen
resolution or with reducing font size.

  - Support has not been initialised before accessing it.

This is an error into program, you have to inform me of this with how you get
it (what you have done to get it and full error message).

  - Origin of heads and sectors numbers requested through options file cannot
    be found or theses numbers are wrong.

When modifiying boot sector physical definitions, you try to use incorrect
values into options file. Either you use some predefined value ("default",
"standard", "extended", ...), but program does not find corresponding
definition, or you use numerical values and these ones are wrong (they shall
be between 1 and 256 for heads number and 1 and 63 for sectors number). In
first case, you can try without options file to see which values can be used.

  - Choosen support is not similar to saved one and you request that it shall
    be the same through "only_if_same=" option into options file.

You try to restore a partition to a partition that is not similar to saved one
and you explicitely request that they shall look like similar. Either choose
another partition to select a similar one or remove "only_if_same=" option
from options file if you trully want to restore backup to this partition.

  - You need a version of kernel >= 2.5.4.
    You need a version of glibc >= 2.2.0.

You need to have at least the requested kernel and glibc versions on Linux. To
know your current kernel version, you can enter the "uname -r" command. To
know your glibc version, you can enter the "/lib/libc.so.6" command. If you do
not have requested versions, you can use a more up to date version through a
live CD (installing a new kernel or glibc version is a not easy job if your
distribution does not propose such an update and you are not familiar with
Linux). If you already have the correct version and get this message, please
contact me with sending the output of the two described commands.

  - Terminal is too small (<n1>*<n2>). It must be at least <n3>*<n4>.
    Terminal must support at least 8 colors.

In Linux you need at least a color terminal with 80 columns and 24 lines to
use text user interface. If you do not have such a terminal, you can use the
console user interface (with -cui option). In case you have a wide enough
color terminal, it can be some incompatibility with the used ncurses version.
You can try forcing known terminal size with the "LINE" and "COLUMN"
environment variable.

  - A compressed file cannot be used to simulate an element.

Using driver to simulate an element needs the saved file not to be compressed.
Use copy file option to inflate file and then use this copy with the driver.

  - Driver is set with a sector size different from element saved into this
    file.

Driver can only simulate element that has sector size equal to the one given
when it was initialised. Change driver loading line such as sector size is
equal to the one of the element into the saved file.

  - Registry file "<filename>" has not been found or is not correct:
    <message>.

Partition or directory you gave seems not to have a Windows 2000 or XP
installation. Check that you do not have made an error. It can also be due to
a bad support of NTFS filesystem.

  - Registry key \HKEY_LOCAL_MACHINE\SYSTEM\MountedDevices has not been found
    or does not have any value

Program cannot find the registry key that defines list of drive letter and
their definition or it does not have any value.

  - No registry value has been found that match searched name and type.

Program cannot find any value into registry that matches a partition
definition.

  - Registry value for given drive letter has not been found or is not
    correct.

Drive letter you gave does not exist into registry or does not correspond to a
partition definition. This can be also due to the fact that registry is not a
Windows 2000 or XP registry.

  - Error when reading disk number into MBR.
    Error when reading disk identifier into GPT.

Program was not able to read the disk identifier that is needed to match or
build a registry value. It can mean the partition table is wrong.

  - All files needed for restoration cannot be retrieved through options on
    check for file existence.

When using the check_files_exist option, the given options does not allow to
get name of all files needed to perform the restoration: either you forget to
give some "file=" options or to use the "automatic_naming=yes" option.

  - Checking for file existence fails on file <filename>: <message>.

When using the check_files_exist option, the check fails on the given file.
The reason is given into the message. It could be because you wrongly type the
filename, you give files in wrong order or the file is missing.

------
All trademarks and registered trademarks are property of their respective
holders.
